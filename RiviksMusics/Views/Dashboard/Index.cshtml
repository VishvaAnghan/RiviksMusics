@{
    ViewData["Title"] = "DashBoard";
}

<!-- Small boxes (Stat box) -->
<div class="row">
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-info">
            <div class="inner">
                <h3>@ViewBag.Currentmonth</h3>

                <p>New Music (Current Month)</p>
            </div>
            <div class="icon">
                <i class="ionicons ion-music-note"></i>
            </div>
            @* <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a> *@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-success">
            <div class="inner">
                <h3>@ViewBag.CurrentAlbum</h3>

                <p>New Albums (Current Month)</p>
            </div>
            <div class="icon">
                <i class="ionicons ion-ios-albums"></i>
            </div>
            @* <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a> *@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-warning">
            <div class="inner">
                <h3 class="text-white">₹@ViewBag.Todaypayment</h3>

                <p class="text-white">Per Day Payment</p>
            </div>
            <div class="icon">
                <i class="ionicons ion-card"></i>
            </div>
            @* <a href="#" class="small-box-footer" style="color:white">More info <i class="fas fa-arrow-circle-right text-white"></i></a> *@
        </div>
    </div>
    <!-- ./col -->
    <div class="col-lg-3 col-6">
        <!-- small box -->
        <div class="small-box bg-danger">
            <div class="inner">
                <h3>₹@ViewBag.MonthTotalPayment</h3>

                <p>Current Month Payment</p>
            </div>
            <div class="icon">
                <i class="ionicons ion-card"></i>
                
            </div>
            @* <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a> *@
        </div>
    </div>
    <!-- ./col -->
</div>
<!-- /.row -->
<!-- Main row -->
<div class="row">
    <!-- Left col -->
    <section class="col-lg-7 connectedSortable">
        <!-- Custom tabs (Charts with tabs)-->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    Monthly Payment
                </h3>
                <div class="card-tools">
                    <ul class="nav nav-pills ml-auto">
                        <li class="nav-item">
                            <a class="nav-link active" href="#revenue-chart" data-toggle="tab">Area</a>
                        </li>
                       
                    </ul>
                </div>
            </div><!-- /.card-header -->
            <div class="card-body">
                <div class="tab-content p-0">
                    <!-- Morris chart - Sales -->
                    <div class="chart tab-pane active" id="revenue-chart"
                         style="position: relative; height: 300px;">
                        <canvas id="revenue-chart-canvas" height="300" style="height: 300px;"></canvas>
                    </div>
                    <div class="chart tab-pane" id="sales-chart" style="position: relative; height: 300px;">
                        <canvas id="sales-chart-canvas" height="300" style="height: 300px;"></canvas>
                    </div>
                </div>
            </div><!-- /.card-body -->
        </div>
    </section>
</div>
       
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var MonthlyPaymentCount = @Html.Raw(Json.Serialize(ViewBag.MonthlyPaymentCount));

        var ctxRevenue = document.getElementById('revenue-chart-canvas').getContext('2d');
        var revenueChart = new Chart(ctxRevenue, {
            type: 'bar',
            data: {
                labels: Array.from({ length: MonthlyPaymentCount.length }, (_, i) => i + 1),
                datasets: [{
                    label: 'Monthly Payment',
                    data: MonthlyPaymentCount,
                    backgroundColor: '#00c0ef',
                    borderColor: 'rgba(60,141,188,1)',
                    pointRadius: false,
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)'
                }]
            },
            options: {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    display: false
                },
                scales: {
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }],
                    yAxes: [{
                        gridLines: {
                            display: false
                        }
                    }]
                }
            }
        });
    </script>
}